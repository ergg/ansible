---
- name: users
  hosts: all
  become: true
  vars_files:
    - user_list.yml
    - secret.yml
  tasks:
    - name: users < 1999
      user:
        name: "{{ item.username }}"
        uid: "{{ item.uid }}"
        shell: /bin/bash
        groups: wheel
        append: yes
        password: "{{ user_password | password_hash('sha512', 'mysecretsalt') }}"
      loop: "{{ users }}"
      when: '"webservers" in group_names and item.uid < 1999'

    - name: keyfile
      authorized_key:
        user: "{{ item.username }}" 
        state: present 
        key: "{{ lookup('file', '/home/automation/.ssh/id_rsa.pub') }}"
      loop: "{{ users }}"
      when: '"webservers" in group_names and item.uid < 1999'
  
    - name: users > 2000
      user:
        name: "{{ item.username }}"
        uid: "{{ item.uid }}"
        shell: /bin/bash
        groups: wheel
        append: yes
        password: "{{ user_password | password_hash('sha512', 'mysecretsalt') }}"
      loop: "{{ users }}"
      when: '"database" in group_names and item.uid >= 2000'

    - name: keyfile
      authorized_key:
        user: "{{ item.username }}" 
        state: present 
        key: "{{ lookup('file', '/home/automation/.ssh/id_rsa.pub') }}"
      loop: "{{ users }}"
      when: '"database" in group_names and item.uid >= 2000'
  





#  Create a playbook /home/automation/plays/users.yml that uses the vault file /home/automation/plays/secret.yml to achieve the following:
#
#  Users whose user ID starts with 1 should be created on servers in the webservers host group. User password should be used from the user_password variable.
#  Users whose user ID starts with 2 should be created on servers in the database host group. User password should be used from the user_password variable.
#  All users should be members of a supplementary group wheel.
#  Shell should be set to /bin/bash for all users.
#  Account passwords should use the SHA512 hash format.
#  Each user should have an SSH key uploaded (use the SSH key that you created previously, see task #2).
#  After running the playbook, users should be able to SSH into their respective servers without passwords.
    
